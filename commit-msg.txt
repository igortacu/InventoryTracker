feat: inventory system end-to-end — API (CQRS + EF Core), SQL in Docker, Blazor WASM UI (port 5148)

Summary
- Working inventory tracking with CRUD on Items.
- Stack: .NET 9, EF Core 9, MediatR 13, SQL Server 2022 in Docker, Blazor WebAssembly.
- API on http://localhost:5148. SQL exposed on 1433 via docker compose.
- UI lists, creates, updates, deletes, adjusts quantities.

Solution layout
- Inventory.Domain
- Inventory.Application
  - CQRS with MediatR 13
  - Commands: CreateItem, UpdateItem, DeleteItem, AdjustQty
  - Queries: GetItemById, ListItems (search + paging)
  - IInventoryDbContext interface
- Inventory.Infrastructure
  - InventoryDbContext (EF Core, SQL Server provider)
  - DesignTimeFactory: reads appsettings or env; fallback to local dev string
  - InitialCreate migration
- Inventory.Api (minimal APIs)
  - Endpoints: POST /items, PUT /items/{id}, DELETE /items/{id}, POST /items/{id}/adjust?delta=, GET /items/{id}, GET /items?search=&page=&pageSize=
  - CORS policy "dev" for local WASM
  - Swagger enabled
  - Bound to http://localhost:5148
- Inventory.Web (Blazor WASM)
  - SDK: Microsoft.NET.Sdk.BlazorWebAssembly (net9.0)
  - Packages: Microsoft.AspNetCore.Components.WebAssembly(+DevServer) 9.0.8
  - Program.cs HttpClient BaseAddress → http://localhost:5148/
  - Items page: table, search, paging, create, inline edit, delete, +1/-1 adjust
  - Simple top nav (Home, Items)

Docker
- docker-compose.yml
  - sql: mcr.microsoft.com/mssql/server:2022-latest
    * ACCEPT_EULA=Y, MSSQL_SA_PASSWORD=YourStrong!Passw0rd
    * Ports 1433:1433
    * Volume mssql_data:/var/opt/mssql
  - api: built from Inventory.Api/Dockerfile
    * Ports 5148:5148
    * ConnectionStrings__Default=Server=sql,1433;Database=InventoryDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=true;
    * depends_on sql
- Inventory.Api/Dockerfile: multi-stage build; ASPNETCORE_URLS=http://0.0.0.0:5148

Fixes during setup
- Resolved MediatR version conflict by standardizing on v13.
- Added Microsoft.Extensions.Configuration.* for design-time factory.
- EF migrations and database update applied to InventoryDb.
- API bound strictly to 5148, freed the port on conflicts.
- sqlcmd path fixed: /opt/mssql-tools18/bin/sqlcmd with -C.
- Blazor errors fixed: correct SDK, imports, and Items.razor name clash.

Run book
- Start stack:       docker compose up -d --build
- API health:        curl http://localhost:5148/
- CRUD test:         curl -H "Content-Type: application/json" -d '{"sku":"X1","name":"Sample","quantity":1,"location":"MAIN","minStock":0}' http://localhost:5148/items
- List:              curl "http://localhost:5148/items?page=1&pageSize=10"
- Stop:              docker compose down

Notes
- Dev-only CORS and TrustServerCertificate.
- SA password stored in compose for local dev; move to secrets for production.
